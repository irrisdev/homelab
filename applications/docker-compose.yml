# Core services running on nova

services:

  nginx-proxy-manager:
    container_name: nginx-proxy-manager
    image: jc21/nginx-proxy-manager:latest
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
      - 81:81
      # - '21:21' # FTP
    environment:
      DISABLE_IPV6: 'true'
    volumes:
      - /docker/nginx/data:/data
      - /docker/nginx/letsencrypt:/etc/letsencrypt

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    environment:
      PUID: 1000 
      PGID: 1000 
    ports:
      - 3333:3000
    volumes:
      - /path/to/config:/app/config 
      - /var/run/docker.sock:/var/run/docker.sock:ro 
    restart: unless-stopped

  ilo-fans-controller:
    container_name: ilo-fans-controller
    image: ghcr.io/alex3025/ilo-fans-controller:latest
    restart: unless-stopped
    ports:
      - 8888:80
    environment:
      - ILO_USERNAME=${ILO_USERNAME}
      - ILO_HOST=${ILO_HOST}
      - ILO_PASSWORD=${ILO_PASSWORD}

  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 15534:5432
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - pg_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_ENABLE_TLS: 1
    volumes:
      - /docker/nginx/letsencrypt/live/npm-1/fullchain.pem:/certs/server.cert:ro
      - /docker/nginx/letsencrypt/live/npm-1/privkey.pem:/certs/server.key:ro
    ports:
      - 15535:443
    depends_on:
      - postgres
    networks:
      - pg_network

volumes:
  pg_data:

networks:
  pg_network:
    driver: bridge

  # traefik:
  #   container_name: traefik
  #   command:
  #   image: traefik:latest
  #   ports:
  #     - "80:80"
  #     - "8080:8080"
  #   networks:
  #     - frontend
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /docker/traefik/traefik.yml:/etc/traefik/traefik.yml
  #     - /docker/traefik/config:/etc/traefik/config
  #   restart: unless-stopped
  
  # adguardhome:
  #   container_name: adguard
  #   restart: unless-stopped
  #   volumes:
  #     - /docker/adguardhome:/opt/adguardhome/work
  #     - /docker/adguardhome/conf:/opt/adguardhome/conf
  #   ports:
  #     # Plain DNS
  #     - 53:53/tcp
  #     - 53:53/udp

  #     # DHCP server
  #     - 67:67/udp
  #     - 68:68/tcp
  #     - 68:68/udp

  #     # Admin panel & DNS over HTTPS
  #     - 80:80/tcp
  #     - 443:443/tcp
  #     - 443:443/udp
  #     # - 3000:3000/tcp for initial setup only

  #     # DNS over TLS
  #     - 853:853/tcp

  #     # DNS over QUIC
  #     - 784:784/udp 
  #     - 8853:8853/udp
  #     - 853:853/udp

  #     # DNSCrypt server
  #     - 5443:5443/tcp
  #     - 5443:5443/udp

  #   image: adguard/adguardhome
